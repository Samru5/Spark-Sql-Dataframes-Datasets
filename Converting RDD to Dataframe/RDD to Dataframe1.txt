scala> val rdd1=sc.textFile("C:/Users/sashetye/demo/call_logs_sample.txt")
rdd1: org.apache.spark.rdd.RDD[String] = C:/Users/sashetye/demo/call_logs_sample.txt MapPartitionsRDD[1] at textFile at <console>:24

scala> rdd1.foreach(println)
6c59cea2-9806-428f-e033-45e53f33be232014-10-05 00:12:242008-10-23 00:02:05SUCCESS 98097865341234765426
7c59cea2-1206-423f-f033-75e53f33be232014-09-07 00:22:122010-08-12 00:03:05DROPPED 12097865341234765421
4c59cea2-5406-128f-g033-89e53f33be232014-08-01 00:03:092006-07-05 00:01:05FAILED 27097865341234765490
9c59cea2-5006-448f-a033-d5e53f33be232014-03-15 00:02:482014-03-15 00:06:05DROPPED 23097865341234765432
3c59cea2-7006-948f-b033-c5e53f33be232014-02-16 00:04:492012-02-16 00:08:05SUCCESS 43097865341234765430
1c59cea2-6706-498f-c033-a5e53f33be232014-01-18 00:01:382016-06-19 00:09:05DROPPED 56097865341234765423
0c59cea2-5806-408f-h033-2re53f33be232014-07-13 00:01:042019-09-25 00:12:05DROPPED 45097865341234765405
2c59cea2-7806-458f-d033-6fe53f33be232014-12-19 00:03:182013-12-21 00:04:05FAILED 67097865341234765445


scala> import scala.util.matching.Regex
import scala.util.matching.Regex


scala> val status_pattern="(DROPPED|SUCCESS|FAILED)".r
status_pattern: scala.util.matching.Regex = (DROPPED|SUCCESS|FAILED)

scala> val phone_pattern="[0-9]{20}".r
phone_pattern: scala.util.matching.Regex = [0-9]{20}

scala> val start_time_pattern="[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}".r
start_time_pattern: scala.util.matching.Regex = [0-9]{4}-[0-9]{2}-[0-9]{2}:[0-9]{2}:[0-9]{2}

scala> val end_time_pattern="[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}(D|S|F)".r
end_time_pattern: scala.util.matching.Regex = [0-9]{4}-[0-9]{2}-[0-9]{2}:[0-9]{2}:[0-9]{2}(D|S|F)

                                  
scala> val rdd2=rdd1.map{x=>
     | val start_time=(Try(start_time_pattern.findFirstIn(x).get).getOrElse("Error"),x)
     | val end_time=(Try(end_time_pattern.findFirstIn(x).get).getOrElse("Error"),x)
     | val status=(Try(status_pattern.findFirstIn(x).get).getOrElse("Error"),x)
     | val phone_number=(Try(phone_pattern.findFirstIn(x).get).getOrElse("Error"),x)
     | (start_time,end_time,status,phone_number)
     | }
rdd3: org.apache.spark.rdd.RDD[((String, String), (String, String), (String, String), (String, String))] = MapPartitionsRDD[20] at map at <console>:43

scala> rdd3.foreach(println)
